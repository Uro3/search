{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/stores.ts","../../src/services/search.ts","../../src/components/SearchForm.svelte","../../src/components/ResultViewSummary.svelte","../../src/components/ResultViewVideoList.svelte","../../src/components/ResultViewPaginator.svelte","../../src/components/ResultView.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.37.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\nconst initialApiProps = {\n    endpoint: '',\n    key: ''\n};\nconst initialResult = {\n    totalResults: 0,\n    videos: []\n};\nconst initialSearchParams = {\n    query: '',\n    maxResults: 5\n};\nexport const apiProps = writable(initialApiProps);\nexport const result = writable(initialResult);\nexport const currentSearchParams = writable(initialSearchParams);\n","export const searchVideo = async (api, params) => {\n    const url = generateSearchVideoURL(api, params);\n    const response = await fetch(url);\n    const data = await response.json();\n    return {\n        totalResults: data.pageInfo.totalResults,\n        videos: data.items.map(item => ({\n            id: item.id.videoId,\n            title: item.snippet.title,\n            thumbnailUrl: item.snippet.thumbnails.high.url,\n            channelId: item.snippet.channelId,\n            channelTitle: item.snippet.channelTitle,\n            publishedAt: item.snippet.publishedAt\n        })),\n        nextPageToken: data.nextPageToken,\n        prevPageToken: data.prevPageToken\n    };\n};\nexport const getChannelTitleById = async (api, channelId) => {\n    const url = new URL(`${api.endpoint}?part=snippet&type=channel&channelId=${channelId}&key=${api.key}`).href;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data.items[0].snippet.channelTitle;\n};\nconst generateSearchVideoURL = (api, params) => {\n    const url = new URL(`${api.endpoint}?part=snippet&type=video&q=${params.query}&maxResults=${params.maxResults}&key=${api.key}`);\n    if (params.channelId) {\n        url.searchParams.append('channelId', params.channelId);\n    }\n    if (params.publishedAfter) {\n        url.searchParams.append('publishedAfter', params.publishedAfter);\n    }\n    if (params.publishedBefore) {\n        url.searchParams.append('publishedBefore', params.publishedBefore);\n    }\n    if (params.pageToken) {\n        url.searchParams.append('pageToken', params.pageToken);\n    }\n    return url.href;\n};\n","<script lang=\"ts\">\n  import { apiProps, result, currentSearchParams } from '../stores';\n  import { searchVideo } from '../services/search';\n  import type { Result, SearchParams } from '../types';\n\n  export let channelId: string = '';\n\n  let query: string = '';\n  let maxResults: number = 5;\n  let publishedAfterInput: string = '';\n  let publishedBeforeInput: string = '';\n\n  $: publishedAfter = publishedAfterInput ? new Date(publishedAfterInput).toISOString() : '';\n  $: publishedBefore = publishedBeforeInput ? new Date(publishedBeforeInput).toISOString() : '';\n\n  const maxResultOptions: number[] = [5, 10, 25, 50]\n\n\tconst handleClick = async () => {\n    const params: SearchParams = {\n      query,\n      maxResults,\n      channelId,\n      publishedAfter,\n      publishedBefore\n    };\n    const newResult: Result = await searchVideo($apiProps, params);\n    result.set(newResult);\n    currentSearchParams.set(params);\n\t};\n</script>\n\n<div id=\"search-form-container\" class=\"flex flex-col m-auto pt-3 pb-1 space-y-1\">\n  <div id=\"search-query\" class=\"flex\">\n    <input bind:value={query} class=\"flex-auto px-2 py-1 border\" placeholder=\"検索ワード\">\n    <button on:click={handleClick} class=\"flex-none px-2 py-1 bg-gray-300\">\n      検索\n    </button>\n  </div>\n  <div id=\"search-max-results\" class=\"flex\">\n    <span class=\"mr-2\">1ページあたりの件数:</span>\n    <select bind:value={maxResults} class=\"border\">\n      {#each maxResultOptions as option}\n        <option value={option}>\n          {option}\n        </option>\n      {/each}\n    </select>\n  </div>\n  <div id=\"search-filter-published-at\" class=\"flex\">\n    <span class=\"mr-2\">アップロード日:</span>\n    <input bind:value={publishedAfterInput} type=\"date\" class=\"flex-auto border-b\">\n    <span class=\"mx-2\">~</span>\n    <input bind:value={publishedBeforeInput} type=\"date\" class=\"flex-auto border-b\">\n  </div>\n</div>\n","<script lang=\"ts\">\n\texport let totalResults: number;\n\texport let channelTitle: string;\n\n\tconst url = new URL(window.location.href);\n\turl.searchParams.delete('channelId');\n</script>\n\n{#if channelTitle}\n\t<p>\n\t\t<span class=\"font-semibold\">{channelTitle}</span> で検索中\n\t</p>\n\t<a href={url.href}>\n\t\t<p class=\"underline\">チャンネル内検索を解除</p>\n\t</a>\n{/if}\n\n{#if totalResults}\n\t<p>\n\t\t検索結果: {totalResults}件\n\t</p>\n{/if}\n","<script lang=\"ts\">\n\timport type { Video } from '../types';\n\n\texport let videos: Video[];\n\n\tconst generateHrefByChannelId = (channelId: string): string => {\n\t\tconst url = new URL(window.location.href);\n\t\turl.searchParams.set('channelId', channelId);\n\t\treturn url.href;\n\t};\n</script>\n\n<div id=\"result-view-video-list\" class=\"flex flex-col space-y-2\">\n\t{#each videos as video (video.id)}\n\t<a href=\"https://www.youtube.com/watch?v={video.id}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"flex flex-row p-2 border rounded shadow\">\n\t\t<img src={video.thumbnailUrl} alt=\"thumbnail\" width=320 class=\"flex-none\">\n\t\t<div class=\"flex-auto flex flex-col justify-between px-2 py-4\">\n\t\t\t<div class=\"flex flex-col pace-y-2\">\n\t\t\t\t<p class=\"text-xl\tfont-bold\">{video.title}</p>\n\t\t\t\t<p class=\"text-sm font-light\">{video.publishedAt}</p>\n\t\t\t\t<p class=\"font-light\">{video.channelTitle}</p>\n\t\t\t</div>\n\t\t\t<a href={generateHrefByChannelId(video.channelId)} class=\"self-end underline\">\n\t\t\t\tこのチャンネル内で検索\n\t\t\t</a>\n\t\t</div>\n\t</a>\n\t{/each}\n</div>\n","<script lang=\"ts\">\n\timport { apiProps, result, currentSearchParams } from '../stores';\n\timport { searchVideo } from '../services/search';\n  import type { Result, SearchParams } from '../types';\n\n\texport let prevPageToken: string;\n\texport let nextPageToken: string;\n\n\tconst next = async () => {\n\t\tawait fetchData(nextPageToken)\n\t};\n\n\tconst prev = async () => {\n\t\tawait fetchData(prevPageToken)\n\t};\n\n\tconst fetchData = async (token: string) => {\n\t\tconst params: SearchParams = {\n\t\t\t...$currentSearchParams,\n\t\t\tpageToken: token\n\t\t}\n\t\tconst newResult: Result = await searchVideo($apiProps, params);\n    result.set(newResult);\n\t\tcurrentSearchParams.set(params);\n\t};\n</script>\n\n<div id=\"result-view-paginator\" class=\"flex justify-center\">\n\t{#if prevPageToken}\n\t\t<button on:click={prev} class=\"px-7 py-1 border\">\n\t\t\t前へ\n\t\t</button>\n\t{/if}\n\n\t{#if nextPageToken}\n\t\t<button on:click={next} class=\"px-7 py-1 border\">\n\t\t\t次へ\n\t\t</button>\n\t{/if}\n</div>\n","<script lang=\"ts\">\n\timport { apiProps, result } from '../stores';\n\timport { getChannelTitleById } from '../services/search';\n\timport ResultViewSummary from './ResultViewSummary.svelte';\n\timport ResultViewVideoList from './ResultViewVideoList.svelte';\n\timport ResultViewPaginator from './ResultViewPaginator.svelte';\n\n\texport let channelId: string;\n\n\tlet getChannelTitlePromise: Promise<string>;\n\n\t$: getChannelTitlePromise = getChannelTitle(channelId);\n\n\tconst getChannelTitle = async (id) => {\n\t\tif (id) {\n\t\t\tconst channelTitle = await getChannelTitleById($apiProps, id);\n\t\t\treturn channelTitle\n\t\t}\n\t\treturn '';\n\t};\n</script>\n\n<div id=\"result-view\" class=\"py-2 space-y-2\">\n\t{#await getChannelTitlePromise}\n\t\t<p>...waiting</p>\n\t{:then title}\n\t\t<ResultViewSummary totalResults={$result.totalResults} channelTitle={title} />\n\t{/await}\n\n\t<ResultViewPaginator prevPageToken={$result.prevPageToken} nextPageToken={$result.nextPageToken} />\n\t<ResultViewVideoList videos={$result.videos} />\n\t<ResultViewPaginator prevPageToken={$result.prevPageToken} nextPageToken={$result.nextPageToken} />\n</div>\n","<script lang=\"ts\">\n\timport { onMount } from 'svelte';\n\timport { apiProps } from './stores';\n\timport SearchForm from './components/SearchForm.svelte';\n\timport ResultView from './components/ResultView.svelte';\n\n\texport let youtubeDataApiEndpoint: string;\n\texport let youtubeDataApiKey: string;\n\n\tlet channelId: string;\n\n\tonMount(() => {\n\t\tapiProps.set({\n\t\t\tendpoint: youtubeDataApiEndpoint,\n\t\t\tkey: youtubeDataApiKey\n\t\t});\n\t\tconst url = new URL(window.location.href);\n\t\tchannelId = url.searchParams.get('channelId') || '';\n\t});\n</script>\n\n<style global lang=\"postcss\">\n  @tailwind base;\n  @tailwind components;\n  @tailwind utilities;\n</style>\n\n<main class=\"container mx-auto max-w-screen-sm\">\n\t<SearchForm channelId={channelId} />\n\t<ResultView channelId={channelId} />\n</main>\n","import App from './App.svelte';\nconst app = new App({\n    target: document.body,\n    props: {\n        youtubeDataApiEndpoint: process.env.YOUTUBE_DATA_API_ENDPOINT || '',\n        youtubeDataApiKey: process.env.YOUTUBE_DATA_API_KEY || ''\n    }\n});\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","select_option","select","i","length","option","__value","selected","current_component","set_current_component","get_current_component","Error","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","d","handle_promise","promise","info","token","type","index","key","resolved","child_ctx","undefined","slice","current","needs_flush","blocks","r","m","mount","then","error","catch","hasCatch","pending","destroy_block","lookup","create_component","mount_component","customElement","on_mount","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","fill","init","instance","create_fragment","not_equal","props","parent_component","bound","on_disconnect","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","indexOf","splice","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","apiProps","endpoint","result","totalResults","videos","currentSearchParams","query","maxResults","searchVideo","async","api","params","url","generateSearchVideoURL","response","fetch","json","pageInfo","items","item","id","videoId","title","snippet","thumbnailUrl","thumbnails","high","channelId","channelTitle","publishedAt","nextPageToken","prevPageToken","URL","searchParams","publishedAfter","publishedBefore","pageToken","href","iterations","__awaiter","thisArg","_arguments","P","generator","publishedAfterInput","publishedBeforeInput","maxResultOptions","Date","toISOString","newResult","$apiProps","selected_option","querySelector","window","location","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","deltas","get","Math","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","fetchData","assign","$currentSearchParams","getChannelTitlePromise","getChannelTitle","getChannelTitleById","youtubeDataApiEndpoint","youtubeDataApiKey","body"],"mappings":"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"}